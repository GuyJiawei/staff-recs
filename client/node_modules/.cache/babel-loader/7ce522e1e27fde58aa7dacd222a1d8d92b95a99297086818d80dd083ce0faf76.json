{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guyji\\\\Bootcamp\\\\staff-recs\\\\client\\\\src\\\\pages\\\\MovieFeed.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { GET_MOVIES_BY_GENRES } from \"../utils/mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieFeed = _ref => {\n  _s();\n  let {\n    userGenres\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_MOVIES_BY_GENRES, {\n    variables: {\n      genres: userGenres\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommended Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.getMoviesByGenres.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genre: \", movie.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movie.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", movie.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), movie.posterUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 35\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_s(MovieFeed, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = MovieFeed;\nexport default MovieFeed;\nvar _c;\n$RefreshReg$(_c, \"MovieFeed\");","map":{"version":3,"names":["React","useQuery","gql","GET_MOVIES_BY_GENRES","jsxDEV","_jsxDEV","MovieFeed","_ref","_s","userGenres","loading","error","data","variables","genres","children","fileName","_jsxFileName","lineNumber","columnNumber","message","getMoviesByGenres","map","movie","title","genre","releaseDate","description","posterUrl","src","alt","id","_c","$RefreshReg$"],"sources":["C:/Users/guyji/Bootcamp/staff-recs/client/src/pages/MovieFeed.js"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { GET_MOVIES_BY_GENRES } from \"../utils/mutations\";\n\nconst MovieFeed = ({ userGenres }) => {\n    const { loading, error, data } = useQuery(GET_MOVIES_BY_GENRES, {\n      variables: { genres: userGenres },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n  \n    return (\n      <div>\n        <h2>Recommended Movies</h2>\n        <div>\n          {data.getMoviesByGenres.map((movie) => (\n            <div key={movie.id}>\n              <h3>{movie.title}</h3>\n              <p>Genre: {movie.genre}</p>\n              <p>Release Date: {movie.releaseDate}</p>\n              <p>Description: {movie.description}</p>\n              {movie.posterUrl && <img src={movie.posterUrl} alt={movie.title} />}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n};\n  \nexport default MovieFeed;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAC9C,SAASC,oBAAoB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC7B,MAAM;IAAEG,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACE,oBAAoB,EAAE;IAC9DU,SAAS,EAAE;MAAEC,MAAM,EAAEL;IAAW;EAClC,CAAC,CAAC;EAEF,IAAIC,OAAO,EAAE,oBAAOL,OAAA;IAAAU,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;EACrC,IAAIR,KAAK,EAAE,oBAAON,OAAA;IAAAU,QAAA,GAAG,SAAO,EAACJ,KAAK,CAACS,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EAE/C,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3Bd,OAAA;MAAAU,QAAA,EACGH,IAAI,CAACS,iBAAiB,CAACC,GAAG,CAAEC,KAAK,iBAChClB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAKQ,KAAK,CAACC;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACtBd,OAAA;UAAAU,QAAA,GAAG,SAAO,EAACQ,KAAK,CAACE,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC3Bd,OAAA;UAAAU,QAAA,GAAG,gBAAc,EAACQ,KAAK,CAACG,WAAW;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxCd,OAAA;UAAAU,QAAA,GAAG,eAAa,EAACQ,KAAK,CAACI,WAAW;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EACtCI,KAAK,CAACK,SAAS,iBAAIvB,OAAA;UAAKwB,GAAG,EAAEN,KAAK,CAACK,SAAU;UAACE,GAAG,EAAEP,KAAK,CAACC;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,GAL3DI,KAAK,CAACQ,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ,CAAC;AAACX,EAAA,CAxBIF,SAAS;EAAA,QACsBL,QAAQ;AAAA;AAAA+B,EAAA,GADvC1B,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}