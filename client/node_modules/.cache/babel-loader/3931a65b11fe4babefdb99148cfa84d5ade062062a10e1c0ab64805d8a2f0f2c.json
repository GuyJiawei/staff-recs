{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guyji\\\\Bootcamp\\\\staff-recs\\\\client\\\\src\\\\pages\\\\GenreSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from '../utils/auth';\nimport { CREATE_USER_GENRE } from '../utils/mutations';\nimport { DELETE_USER_GENRE } from '../utils/mutations';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreSelectionPage = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [savedGenres, setSavedGenres] = useState([]);\n  const [createUserGenres] = useMutation(CREATE_USER_GENRE);\n  const navigate = useNavigate();\n  const genres = [{\n    name: 'Action',\n    genreId: '28'\n  }, {\n    name: 'Comedy',\n    genreId: '35'\n  }, {\n    name: 'Drama',\n    genreId: '18'\n  }, {\n    name: 'Horror',\n    genreId: '27'\n  }, {\n    name: 'Science Fiction',\n    genreId: '878'\n  }, {\n    name: 'Family',\n    genreId: '10751'\n  }, {\n    name: 'Romance',\n    genreId: '10749'\n  }];\n  const handleGenreClick = genre => {\n    if (savedGenres.includes(genre)) {\n      setSavedGenres(savedGenres.filter(g => g !== genre));\n    } else {\n      setSavedGenres([...savedGenres, genre]);\n    }\n  };\n  const handleSaveGenres = async () => {\n    try {\n      await createUserGenres({\n        variables: {\n          userId,\n          genres: savedGenres\n        }\n      });\n      navigate('/movie-feed');\n    } catch (error) {\n      console.error('Error updating user genres:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGenreClick(genre),\n        style: {\n          backgroundColor: savedGenres.includes(genre) ? 'lightblue' : ''\n        },\n        children: genre.name\n      }, genre.genreId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveGenres,\n      children: \"Save and Show Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GenreSelectionPage, \"k7T6/dELFyx1tf/xdmEStLwXRmc=\", false, function () {\n  return [useMutation, useNavigate];\n});\n_c = GenreSelectionPage;\nexport default GenreSelection;\nvar _c;\n$RefreshReg$(_c, \"GenreSelectionPage\");","map":{"version":3,"names":["React","useState","useMutation","Auth","CREATE_USER_GENRE","DELETE_USER_GENRE","useNavigate","jsxDEV","_jsxDEV","GenreSelectionPage","_ref","_s","userId","savedGenres","setSavedGenres","createUserGenres","navigate","genres","name","genreId","handleGenreClick","genre","includes","filter","g","handleSaveGenres","variables","error","console","children","map","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","GenreSelection","$RefreshReg$"],"sources":["C:/Users/guyji/Bootcamp/staff-recs/client/src/pages/GenreSelection.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from '../utils/auth';\r\nimport { CREATE_USER_GENRE } from '../utils/mutations';\r\nimport { DELETE_USER_GENRE } from '../utils/mutations';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GenreSelectionPage = ({ userId }) => {\r\n  const [savedGenres, setSavedGenres] = useState([]);\r\n  const [createUserGenres] = useMutation(CREATE_USER_GENRE);\r\n  const navigate = useNavigate();\r\n\r\n  const genres = [\r\n    {\r\n        name: 'Action',\r\n        genreId: '28'\r\n      },\r\n      {\r\n        name: 'Comedy',\r\n        genreId: '35'\r\n      },\r\n      {\r\n        name: 'Drama',\r\n        genreId: '18'\r\n      },\r\n      {\r\n        name: 'Horror',\r\n        genreId: '27'\r\n      },\r\n      {\r\n        name: 'Science Fiction',\r\n        genreId: '878'\r\n      },\r\n      {\r\n        name: 'Family',\r\n        genreId: '10751'\r\n      },\r\n      {\r\n        name: 'Romance',\r\n        genreId: '10749'\r\n      }\r\n  ];\r\n\r\n  const handleGenreClick = (genre) => {\r\n    if (savedGenres.includes(genre)) {\r\n      setSavedGenres(savedGenres.filter((g) => g !== genre));\r\n    } else {\r\n      setSavedGenres([...savedGenres, genre]);\r\n    }\r\n  };\r\n\r\n  const handleSaveGenres = async () => {\r\n    try {\r\n      await createUserGenres({\r\n        variables: { userId, genres: savedGenres },\r\n      });\r\n      navigate('/movie-feed');\r\n    } catch (error) {\r\n      console.error('Error updating user genres:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... */}\r\n      <div>\r\n        {genres.map((genre) => (\r\n          <button\r\n            key={genre.genreId}\r\n            onClick={() => handleGenreClick(genre)}\r\n            style={{\r\n              backgroundColor: savedGenres.includes(genre) ? 'lightblue' : '',\r\n            }}\r\n          >\r\n            {genre.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSaveGenres}>Save and Show Movies</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenreSelection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}