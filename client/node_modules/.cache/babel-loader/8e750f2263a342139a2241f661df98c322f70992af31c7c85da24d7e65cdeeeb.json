{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guyji\\\\Bootcamp\\\\staff-recs\\\\client\\\\src\\\\pages\\\\MovieFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { getMoviesByGenres } from '../utils/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieFeed = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const {\n    data,\n    refetch\n  } = useQuery(GET_USER_GENRES, {\n    variables: {\n      userId\n    }\n  });\n  const fetchMovies = async () => {\n    if (!data || !data.user) return;\n    try {\n      const movieData = await getMoviesByGenres(data.user.genres);\n      setMovies(movieData.results);\n    } catch (error) {\n      console.error('Error fetching movie suggestions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [data]);\n  const handleRefreshSuggestions = () => {\n    fetchMovies();\n  };\n  if (!data || !data.user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefreshSuggestions,\n      children: \"Refresh Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieFeed, \"ZG0f4I8JCYU/3q8ya6MlZlqc0x4=\", false, function () {\n  return [useQuery];\n});\n_c = MovieFeed;\nexport default MovieFeed;\nvar _c;\n$RefreshReg$(_c, \"MovieFeed\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","gql","getMoviesByGenres","jsxDEV","_jsxDEV","MovieFeed","_ref","_s","userId","movies","setMovies","data","refetch","GET_USER_GENRES","variables","fetchMovies","user","movieData","genres","results","error","console","handleRefreshSuggestions","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","alt","title","overview","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/guyji/Bootcamp/staff-recs/client/src/pages/MovieFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { getMoviesByGenres } from '../utils/API';\n\n\nconst MovieFeed = ({ userId }) => {\n  const [movies, setMovies] = useState([]);\n  const { data, refetch } = useQuery(GET_USER_GENRES, {\n    variables: { userId },\n  });\n\n  const fetchMovies = async () => {\n    if (!data || !data.user) return;\n\n    try {\n      const movieData = await getMoviesByGenres(data.user.genres);\n      setMovies(movieData.results);\n    } catch (error) {\n      console.error('Error fetching movie suggestions:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, [data]);\n\n  const handleRefreshSuggestions = () => {\n    fetchMovies();\n  };\n\n  if (!data || !data.user) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <h2>Movie Suggestions</h2>\n      <div>\n        {movies.map((movie) => (\n          <div key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>{movie.overview}</p>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleRefreshSuggestions}>Refresh Suggestions</button>\n    </div>\n  );\n};\n\nexport default MovieFeed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}