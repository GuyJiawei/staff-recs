{"ast":null,"code":"// frontend/src/api.js\nimport axios from 'axios';\nconst API_KEY = '17a6355f2a7004c806bbc70ebd5a8bfc';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Function to fetch movies by genre\nconst getMoviesByGenres = async function (genreIds) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const genres = [{\n    name: 'Action',\n    genreId: '28'\n  }, {\n    name: 'Comedy',\n    genreId: '35'\n  }, {\n    name: 'Drama',\n    genreId: '18'\n  }, {\n    name: 'Horror',\n    genreId: '27'\n  }, {\n    name: 'Science Fiction',\n    genreId: '878'\n  }, {\n    name: 'Family',\n    genreId: '10751'\n  }, {\n    name: 'Romance',\n    genreId: '10749'\n  }];\n  try {\n    const genreIdString = genreIds.join(',');\n    const response = await axios.get(`${BASE_URL}/discover/movie`, {\n      params: {\n        api_key: API_KEY,\n        with_genres: genreIdString,\n        page\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movies by genres:', error);\n    throw error;\n  }\n};\n\n// Function to fetch genre list\nconst getGenreList = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data.genres;\n  } catch (error) {\n    console.error('Error fetching genre list:', error);\n    throw error;\n  }\n};\nexport { getMoviesByGenres, getGenreList };","map":{"version":3,"names":["axios","API_KEY","BASE_URL","getMoviesByGenres","genreIds","page","arguments","length","undefined","genres","name","genreId","genreIdString","join","response","get","params","api_key","with_genres","data","error","console","getGenreList"],"sources":["C:/Users/guyji/Bootcamp/staff-recs/client/src/utils/API.js"],"sourcesContent":["// frontend/src/api.js\nimport axios from 'axios';\n\nconst API_KEY = '17a6355f2a7004c806bbc70ebd5a8bfc';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\n\n// Function to fetch movies by genre\nconst getMoviesByGenres = async (genreIds, page = 1) => {\n  const genres = [\n    {\n      name: 'Action',\n      genreId: '28'\n    },\n    {\n      name: 'Comedy',\n      genreId: '35'\n    },\n    {\n      name: 'Drama',\n      genreId: '18'\n    },\n    {\n      name: 'Horror',\n      genreId: '27'\n    },\n    {\n      name: 'Science Fiction',\n      genreId: '878'\n    },\n    {\n      name: 'Family',\n      genreId: '10751'\n    },\n    {\n      name: 'Romance',\n      genreId: '10749'\n    }\n  ];\n\n  try {\n    const genreIdString = genreIds.join(',');\n    const response = await axios.get(`${BASE_URL}/discover/movie`, {\n      params: {\n        api_key: API_KEY,\n        with_genres: genreIdString,\n        page,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movies by genres:', error);\n    throw error;\n  }\n};\n\n\n// Function to fetch genre list\nconst getGenreList = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return response.data.genres;\n  } catch (error) {\n    console.error('Error fetching genre list:', error);\n    throw error;\n  }\n};\n\nexport { getMoviesByGenres, getGenreList };\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,8BAA8B;;AAI/C;AACA,MAAMC,iBAAiB,GAAG,eAAAA,CAAOC,QAAQ,EAAe;EAAA,IAAbC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACjD,MAAMG,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,iBAAiB;IACvBC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE;EACX,CAAC,CACF;EAED,IAAI;IACF,MAAMC,aAAa,GAAGR,QAAQ,CAACS,IAAI,CAAC,GAAG,CAAC;IACxC,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEb,QAAS,iBAAgB,EAAE;MAC7Dc,MAAM,EAAE;QACNC,OAAO,EAAEhB,OAAO;QAChBiB,WAAW,EAAEN,aAAa;QAC1BP;MACF;IACF,CAAC,CAAC;IAEF,OAAOS,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;;AAGD;AACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEb,QAAS,mBAAkB,EAAE;MAC/Dc,MAAM,EAAE;QACNC,OAAO,EAAEhB;MACX;IACF,CAAC,CAAC;IAEF,OAAOa,QAAQ,CAACK,IAAI,CAACV,MAAM;EAC7B,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASjB,iBAAiB,EAAEmB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}